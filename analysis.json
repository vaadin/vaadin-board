{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "vaadin-board.html",
        "start": {
          "line": 77,
          "column": 6
        },
        "end": {
          "line": 77,
          "column": 48
        }
      },
      "elements": [
        {
          "description": "`<vaadin-board-row>` is a Polymer element that together with `vaadin-board` element allows to create flexible responsive layouts and build nice looking dashboard.\n\nEach row can contain up to four elements (fewer if colspan is used) and is automatically responsive. The row changes between `large`, `medium` and `small` modes depending on the available width and the set breakpoints. In `large` mode, typically all content is shown side-by-side, in `medium` half of the content is side by side and in `small` mode, content is laid out vertically.\n\nThe breakpoints can be set using custom CSS properties. By default the breakpoints are `small: <600px`, `medium: < 960px`, `large >= 960px`.\n\n\n```html\n<vaadin-board>\n  <vaadin-board-row>\n    <div>This could be chart 1</div>\n    <div>This could be chart 2</div>\n    <div>This could be chart 3</div>\n    <div>This could be chart 4</div>\n  </vaadin-board-row>\n</vaadin-board>\n```\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|-------------\n`--vaadin-board-width-small` | Determines the width where mode changes from `small` to `medium` | `600px`\n`--vaadin-board-width-medium` | Determines the width where mode changes from `medium` to `large` | `960px`",
          "summary": "",
          "path": "vaadin-board-row.html",
          "properties": [],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 80,
                  "column": 8
                },
                "end": {
                  "line": 94,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 95,
                  "column": 8
                },
                "end": {
                  "line": 98,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_addStyleNames",
              "description": "Adds styles for board row based on width.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 8
                },
                "end": {
                  "line": 117,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "width"
                },
                {
                  "name": "breakpoints"
                }
              ]
            },
            {
              "name": "_calculateFlexBasis",
              "description": "Calculates flex basis based on colSpan, width and breakpoints.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 126,
                  "column": 8
                },
                "end": {
                  "line": 135,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "colSpan",
                  "type": "Number",
                  "description": "colspan value of the row"
                },
                {
                  "name": "width",
                  "type": "Number",
                  "description": "width of the row in px"
                },
                {
                  "name": "colsInRow",
                  "type": "Number",
                  "description": "number of columns in the row"
                },
                {
                  "name": "breakpoints",
                  "type": "Object",
                  "description": "object with smallSize and mediumSize number properties, which tells\nwhere the row should switch rendering size in pixels."
                }
              ]
            },
            {
              "name": "_reportError",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 137,
                  "column": 8
                },
                "end": {
                  "line": 140,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_parseBoardCols",
              "description": "Parses board-cols from DOM.\nIf there is not enough space in the row drop board cols.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 149,
                  "column": 8
                },
                "end": {
                  "line": 174,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "nodes"
                }
              ],
              "return": {
                "type": "Array",
                "desc": "array of boardCols"
              }
            },
            {
              "name": "_removeExtraNodesFromDOM",
              "description": "If there is not enough space in the row.\nExtra items are dropped from DOM.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 183,
                  "column": 8
                },
                "end": {
                  "line": 201,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "boardCols"
                },
                {
                  "name": "nodes"
                }
              ],
              "return": {
                "type": "Array",
                "desc": "filtered array of nodes"
              }
            },
            {
              "name": "redraw",
              "description": "Redraws the row, if necessary.\n\nIn most cases, a board row will redraw itself if your reconfigure it. If you dynamically change CSS which affects the row, then you need to call this method.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 208,
                  "column": 8
                },
                "end": {
                  "line": 210,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onIronResize",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 212,
                  "column": 8
                },
                "end": {
                  "line": 214,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_recalculateFlexBasis",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 8
                },
                "end": {
                  "line": 242,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "forceResize"
                }
              ]
            },
            {
              "name": "_measureBreakpointsInPx",
              "description": "Measure the breakpoints in pixels.\n\nThe breakpoints for `small` and `medium` can be given in any unit: `px`, `em`, `in` etc.\nWe need to know them in `px` so that they are comparable with the actual size.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 253,
                  "column": 8
                },
                "end": {
                  "line": 272,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "Object",
                "desc": "object with smallSize and mediumSize number properties, which tells\nwhere the row should switch rendering size in pixels."
              }
            }
          ],
          "staticMethods": [],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 273,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.BoardRowElement",
          "attributes": [],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "file": "vaadin-board-row.html",
                "start": {
                  "line": 27,
                  "column": 4
                },
                "end": {
                  "line": 27,
                  "column": 37
                }
              }
            }
          ],
          "tagname": "vaadin-board-row"
        },
        {
          "description": "`<vaadin-board>` is a Polymer element to create flexible responsive layouts\nand build nice looking dashboards.\n\nA Vaadin Board is built using `<vaadin-board-row>` elements containing your child elements.\nEach board row consists of four columns, and can contain up to four elements. Using column spans \nyou can tune the layout to your liking.\n\n```html\n<vaadin-board>\n  <vaadin-board-row>\n    <div>This could be chart 1</div>\n    <div>This could be chart 2</div>\n    <div>This could be chart 3</div>\n    <div>This could be chart 4</div>\n  </vaadin-board-row>\n</vaadin-board>\n```",
          "summary": "",
          "path": "vaadin-board.html",
          "properties": [],
          "methods": [
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 57,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "redraw",
              "description": "Redraws the board and all rows inside it, if necessary.\n\nIn most cases, board will redraw itself if your reconfigure it. If you dynamically change CSS\nwhich affects this element, then you need to call this method.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 67,
                  "column": 9
                },
                "end": {
                  "line": 69,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            }
          ],
          "staticMethods": [],
          "demos": [
            {
              "url": "demo/index.html",
              "description": ""
            }
          ],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "privacy": "public",
          "superclass": "HTMLElement",
          "name": "Vaadin.BoardElement",
          "attributes": [],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "file": "vaadin-board.html",
                "start": {
                  "line": 17,
                  "column": 4
                },
                "end": {
                  "line": 17,
                  "column": 17
                }
              }
            }
          ],
          "tagname": "vaadin-board"
        }
      ]
    }
  ]
}
